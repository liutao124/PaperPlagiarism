package cn.octopus.paperplagiarism.view;

import cn.hutool.core.date.DateUtil;
import cn.hutool.core.io.FileUtil;
import cn.hutool.core.util.ObjUtil;
import cn.hutool.core.util.StrUtil;
import cn.octopus.paperplagiarism.constant.Constants;
import cn.octopus.paperplagiarism.controller.FileController;
import cn.octopus.paperplagiarism.util.ExportUtil;
import cn.octopus.paperplagiarism.util.ObjectInstUtil;
import cn.octopus.paperplagiarism.vo.*;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.io.File;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;

/**
 *
 * @author taoliu
 */
public class PaperPlagiarismView extends javax.swing.JFrame {

    /**
     * Creates new form PaperPlagiarismView
     */
    public PaperPlagiarismView() {
        initComponents();
        initComponentsExt();
        InitConfigUtil.createInitFile();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel searchPanel = new JPanel();
        JLabel filePathLabel1 = new JLabel();
        filePathTF1 = new javax.swing.JTextField();
        filePathTF2 = new javax.swing.JTextField();
        fileChoiceBtn1 = new javax.swing.JButton();
        fileChoiceBtn2 = new javax.swing.JButton();
        startBtn = new javax.swing.JButton();
        settings = new javax.swing.JButton();
        exportBtn = new javax.swing.JButton();
        JPanel dataPanel = new JPanel();
        JScrollPane dataSP = new JScrollPane();
        dataTable = new javax.swing.JTable();
        JPanel pagePanel = new JPanel();
        JLabel jLabel1 = new JLabel();
        pageLabel = new javax.swing.JLabel();
        JLabel jLabel4 = new JLabel();
        JLabel jLabel5 = new JLabel();
        JLabel jLabel6 = new JLabel();
        JLabel jLabel7 = new JLabel();
        countLabel = new javax.swing.JLabel();
        JButton prevBtn = new JButton();
        JButton nextBtn = new JButton();
        pageComboBox = new javax.swing.JComboBox<>();
        JLabel jLabel8 = new JLabel();
        pageSizeComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("文件查重工具");
        setLocation(new java.awt.Point(100, 50));
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 768));

        filePathLabel1.setText("选择对比目录：");

        filePathTF1.setEditable(false);

        filePathTF2.setEditable(false);

        fileChoiceBtn1.setMaximumSize(new java.awt.Dimension(20, 20));
        fileChoiceBtn1.setMinimumSize(new java.awt.Dimension(20, 20));
        fileChoiceBtn1.setPreferredSize(new java.awt.Dimension(25, 25));
        fileChoiceBtn1.addActionListener(evt -> fileChoiseBtn1ActionPerformed(evt));

        fileChoiceBtn2.setPreferredSize(new java.awt.Dimension(25, 25));
        fileChoiceBtn2.setSize(new java.awt.Dimension(20, 20));
        fileChoiceBtn2.addActionListener(evt -> fileChoiseBtn2ActionPerformed(evt));

        startBtn.setText("开始对比");
        startBtn.addActionListener(evt -> startBtnActionPerformed(evt));

        settings.setToolTipText("系统参数设置");
        settings.setPreferredSize(new java.awt.Dimension(25, 25));
        settings.addActionListener(evt -> settingsActionPerformed(evt));

        exportBtn.setToolTipText("导出Excel数据");
        exportBtn.setPreferredSize(new java.awt.Dimension(25, 25));
        exportBtn.addActionListener(evt -> exportBtnActionPerformed(evt));

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
                searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(filePathLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filePathTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fileChoiceBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(filePathTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fileChoiceBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(startBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                                .addComponent(exportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(settings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
                searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(settings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(exportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(fileChoiceBtn1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(filePathLabel1)
                                                        .addComponent(filePathTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(filePathTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fileChoiceBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(startBtn))
                                .addContainerGap(14, Short.MAX_VALUE))
        );

        dataSP.setViewportView(PageTableModel.create(dataTable, 15));

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
                dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dataPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(dataSP)
                                .addContainerGap())
        );
        dataPanelLayout.setVerticalGroup(
                dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dataPanelLayout.createSequentialGroup()
                                .addComponent(dataSP, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                                .addContainerGap())
        );

        jLabel1.setText("页");

        pageLabel.setText("1 ");

        jLabel4.setText("跳转到");

        jLabel5.setText("页，");

        jLabel6.setText("当前为第");

        jLabel7.setText("条");

        countLabel.setText("0");

        prevBtn.setText("上一页");
        prevBtn.addActionListener(evt -> prevBtnActionPerformed(evt));

        nextBtn.setText("下一页");
        nextBtn.addActionListener(evt -> nextBtnActionPerformed(evt));

        pageComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1" }));

        jLabel8.setText("共");

        pageSizeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "15   条/页", "50   条/页", "100 条/页", "200 条/页" }));
        pageSizeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pageSizeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pagePanelLayout = new javax.swing.GroupLayout(pagePanel);
        pagePanel.setLayout(pagePanelLayout);
        pagePanelLayout.setHorizontalGroup(
                pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pagePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pageLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(countLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 483, Short.MAX_VALUE)
                                .addComponent(prevBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nextBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pageSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        pagePanelLayout.setVerticalGroup(
                pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pagePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                                        .addComponent(pageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(countLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(prevBtn)
                                        .addComponent(nextBtn)
                                        .addComponent(pageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pageSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dataPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsExt() {
        // 计算屏幕的大小
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

        // 计算JFrame的左上角坐标，使得JFrame居中
        int x = (screenSize.width - getWidth()) / 2;
        int y = (screenSize.height - getHeight()) / 2;

        // 设置JFrame的位置
        setLocation(x, y);

        URL urlSetting = getClass().getResource("/cn/octopus/paperplagiarism/images/setting.png");
        ImageIcon settingIcon = new ImageIcon(urlSetting);
        Image settingImage = settingIcon.getImage().getScaledInstance(18, 18, Image.SCALE_DEFAULT);
        ImageIcon settingImageIcon = new ImageIcon(settingImage);
        settings.setIcon(settingImageIcon);

        URL urlChoise = getClass().getResource("/cn/octopus/paperplagiarism/images/choise.png");
        ImageIcon choiseIcon = new ImageIcon(urlChoise);
        Image choiseImage = choiseIcon.getImage().getScaledInstance(18, 18, Image.SCALE_DEFAULT);
        ImageIcon choiseImageIcon = new ImageIcon(choiseImage);
        fileChoiceBtn1.setIcon(choiseImageIcon);
        fileChoiceBtn2.setIcon(choiseImageIcon);

        URL urlExport = getClass().getResource("/cn/octopus/paperplagiarism/images/export.png");
        ImageIcon exportIcon = new ImageIcon(urlExport);
        Image exportImage = exportIcon.getImage().getScaledInstance(18, 18, Image.SCALE_DEFAULT);
        ImageIcon exportImageIcon = new ImageIcon(exportImage);
        exportBtn.setIcon(exportImageIcon);

        JTableHeader head = dataTable.getTableHeader(); // 创建表格标题对象
        head.setPreferredSize(new Dimension(head.getWidth(), 35));// 设置表头大小
        head.setFont(new Font("楷体", Font.BOLD, 14));// 设置表格字体

        pageSizeComboBox.addItemListener((ItemEvent e) -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                String selectedItem = pageSizeComboBox.getSelectedItem().toString();
                if(selectedItem.startsWith("50")){
                    pageSize = 50;
                }else if(selectedItem.startsWith("100")){
                    pageSize = 100;
                }else if(selectedItem.startsWith("200")){
                    pageSize = 200;
                }else{
                    pageSize = 15;
                }
                Page page = fileController.getFileDataByPages(1, pageSize);
                tableFileData = page.getResultData();
                pageLabel.setText(String.valueOf(page.getCurPage()));
                setTableData(dataTable, tableFileData);
                initPageComboBox(page.getPages());
            }
        });
    }

    private String getChiosePath() {
        JFileChooser jfc = new JFileChooser(InitConfigUtil.getConfig("initDir"));
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jfc.setDialogTitle("选择对比目录");
        jfc.showDialog(new JLabel(), "选择");
        File file = jfc.getSelectedFile();
        if (FileUtil.isNotEmpty(file) && FileUtil.isDirectory(file)) {
            return file.getAbsolutePath();
        } else {
            return "";
        }
    }

    private void setTableData(JTable dataTable, List<FileData> fileDatas){
        PageTableModel.create(dataTable, pageSize);
        TableModel tableModel = dataTable.getModel();
        int i = 0;
        for(FileData fileData: fileDatas){
            if (i >= pageSize){
                break;
            }
            tableModel.setValueAt(fileData.getFileName1(), i, 0);
            tableModel.setValueAt(fileData.getFileName2(), i, 1);
            tableModel.setValueAt(fileData.getPercent(), i, 2);
            i++;
        }
    }

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String filePath1 = filePathTF1.getText();
        String filePath2 = filePathTF2.getText();
        if (StrUtil.isBlank(filePath1) || StrUtil.isBlank(filePath2)){
            JOptionPane.showMessageDialog(null, "请选择你要对比的两个文档目录", "对比警告", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // 禁用按钮并更改文本
        startBtn.setEnabled(false);
        startBtn.setText("对比中...");

        // 在新线程中执行耗时任务
        new Thread(() -> {
            try {
                long startTime = System.currentTimeMillis();
                System.out.println("-----------------任务开始时间：-----------------"+DateUtil.now());
                fileController.clearFileData();
                fileController.simHashesDocs(filePath1, filePath2);
                fileController.startQuartz();
                fileController.getSimHashesDocs1().forEach(fileController::getFileData);
                fileController.checkJobCompleted();
                fileController.endClearAll();

                Page page = fileController.getFileDataByPages(1, pageSize);
                tableFileData = page.getResultData();
                pageLabel.setText(String.valueOf(page.getCurPage()));
                countLabel.setText(String.valueOf(page.getTotal()));
                initPageComboBox(page.getPages());

                long endTime = System.currentTimeMillis();
                System.out.println("-----------------任务结束时间：-----------------"+DateUtil.now());
                System.out.println("-----------------执行任务总时间：-----------------"+(endTime-startTime)/1000+"秒");
                JOptionPane.showMessageDialog(null, "文档对比完成，请在表格内查看结果！", "消息提示", JOptionPane.INFORMATION_MESSAGE);
            } catch (HeadlessException ex) {
                Thread.currentThread().interrupt();
            }

            // 更新UI（必须在EDT中执行）
            SwingUtilities.invokeLater(() -> {
                // 恢复按钮原始状态
                startBtn.setEnabled(true);
                startBtn.setText("开始对比");
            });
        }).start();
    }

    private void initPageComboBox(int pages){
        pageComboBox.removeAllItems();
        for(int i=1; i<=pages; i++){
            pageComboBox.addItem(String.valueOf(i));
        }
        if(ObjUtil.isNotEmpty(tableFileData)){
            setTableData(dataTable, tableFileData);
            // 为 JComboBox 添加 ItemListener
            pageComboBox.addItemListener((ItemEvent e) -> {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    Integer selectedItem = Integer.valueOf(pageComboBox.getSelectedItem().toString()) ;
                    Page pageCB = fileController.getFileDataByPages(selectedItem, pageSize);
                    tableFileData = pageCB.getResultData();
                    pageLabel.setText(String.valueOf(pageCB.getCurPage()));
                    setTableData(dataTable, tableFileData);
                }
            });
        }
    }

    private void fileChoiseBtn1ActionPerformed(java.awt.event.ActionEvent evt) {
        filePathTF1.setText(getChiosePath());
    }

    private void fileChoiseBtn2ActionPerformed(java.awt.event.ActionEvent evt) {
        filePathTF2.setText(getChiosePath());
    }

    private void settingsActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        JDialog settingView = new SettingView(this, true);
        settingView.setVisible(true);
    }

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        // 创建文件选择对话框
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("请选择文件保存目录");
        // 设置文件选择器以仅显示目录
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        // 打开文件选择器对话框
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            // 用户选择了一个目录
            File fileDir = fileChooser.getSelectedFile();
            File excelFile = FileUtil.file(fileDir+ File.separator + DateUtil.date().toString("yyyyMMddHHmm")+".xlsx") ;
            if(!excelFile.exists()){
                FileUtil.touch(excelFile);
            }
            // 禁用按钮并更改文本
            exportBtn.setEnabled(false);

            // 在新线程中执行耗时任务
            new Thread(() -> {
                try {
                    ExportUtil.toExcel(fileController.getFileDatas(), excelFile);
                    JOptionPane.showMessageDialog(null, "文件"+excelFile.getAbsolutePath()+"数据导出完成！", "消息提示", JOptionPane.INFORMATION_MESSAGE);
                } catch (HeadlessException ex) {
                    Thread.currentThread().interrupt();
                }

                // 更新UI（必须在EDT中执行）
                SwingUtilities.invokeLater(() -> {
                    // 恢复按钮原始状态
                    exportBtn.setEnabled(true);
                });
            }).start();

        }
    }

    private void prevBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int curPage = Integer.parseInt(pageLabel.getText());
        if(1==curPage){
            JOptionPane.showMessageDialog(null, "当前已经为第一页", "消息提示", JOptionPane.WARNING_MESSAGE);
        }else if(1 < curPage){
            Page pageCB = fileController.getFileDataByPages(--curPage, pageSize);
            tableFileData = pageCB.getResultData();
            pageLabel.setText(String.valueOf(curPage));
            setTableData(dataTable, tableFileData);
        }
    }

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {
        int curPage = Integer.parseInt(pageLabel.getText());
        int totalSize = Integer.parseInt(countLabel.getText());
        int lastPage = (totalSize +  pageSize - 1) /  pageSize;

        if(lastPage == curPage){
            JOptionPane.showMessageDialog(null, "当前已经为最后一页", "消息提示", JOptionPane.WARNING_MESSAGE);
        }else{
            Page page = fileController.getFileDataByPages(++curPage, pageSize);
            tableFileData = page.getResultData();
            pageLabel.setText(String.valueOf(curPage));
            setTableData(dataTable, tableFileData);
        }
    }

    private void pageSizeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            System.err.println("Failed to initialize LaF");
        }

        java.awt.EventQueue.invokeLater(() -> {
            new PaperPlagiarismView().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel countLabel;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton exportBtn;
    private javax.swing.JButton fileChoiceBtn1;
    private javax.swing.JButton fileChoiceBtn2;
    private javax.swing.JTextField filePathTF1;
    private javax.swing.JTextField filePathTF2;
    private javax.swing.JComboBox<String> pageComboBox;
    private javax.swing.JLabel pageLabel;
    private javax.swing.JComboBox<String> pageSizeComboBox;
    private javax.swing.JButton settings;
    private javax.swing.JButton startBtn;
    // End of variables declaration//GEN-END:variables

    private static final FileController fileController = ObjectInstUtil.getInstance(FileController.class, FileController::new);
    private static List<FileData> tableFileData = new ArrayList<>();
    private static int pageSize = Constants.PAGE_SIZE;
}
